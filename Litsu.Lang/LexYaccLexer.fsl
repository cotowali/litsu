{
open FSharp.Text.Lexing
open Litsu.Lang.LexYaccParser

let lexeme = LexBuffer<_>.LexemeString

let newline (lexbuf: LexBuffer<_>) =
  lexbuf.StartPos <- lexbuf.StartPos.NextLine

// fsharplint:disable
}

let whitespace = [' ' '\t']
let newline = ('\n' | '\r' '\n')

let digit = ['0'-'9']

let int = digit+

rule read = parse
| whitespace { read lexbuf }
| newline    { newline lexbuf; read lexbuf }
| int        { INT(lexeme lexbuf |> int64) }
| '+'        { PLUS }
| '-'        { MINUS }
| eof        { EOF }
| _          { failwith ("ParseError" + LexBuffer<_>.LexemeString lexbuf) }
